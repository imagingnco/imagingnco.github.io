{"version":3,"file":"584.js","mappings":"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","sources":["webpack://@lenna-proj/lenna-web/./src/components/ImagePreview.vue?01bf","webpack://@lenna-proj/lenna-web/./src/views/Batch.vue?0839","webpack://@lenna-proj/lenna-web/./src/bootstrap.ts","webpack://@lenna-proj/lenna-web/./src/controllers/plugin_manager.ts","webpack://@lenna-proj/lenna-web/./src/controllers/processor.ts","webpack://@lenna-proj/lenna-web/./src/controllers/storage.ts","webpack://@lenna-proj/lenna-web/./src/router.ts","webpack://@lenna-proj/lenna-web/./src/components/Navbar.vue","webpack://@lenna-proj/lenna-web/./src/components/Navbar.vue?fb62","webpack://@lenna-proj/lenna-web/./src/components/Navbar.vue?75b5","webpack://@lenna-proj/lenna-web/./src/components/Footer.vue","webpack://@lenna-proj/lenna-web/./src/components/Footer.vue?ff87","webpack://@lenna-proj/lenna-web/./src/components/Footer.vue?162e","webpack://@lenna-proj/lenna-web/./src/App.vue","webpack://@lenna-proj/lenna-web/./src/App.vue?3b2b","webpack://@lenna-proj/lenna-web/./src/components/ImagePreview.vue?da5e","webpack://@lenna-proj/lenna-web/./src/components/ImageUpload.vue","webpack://@lenna-proj/lenna-web/./src/components/ImageUpload.vue?d272","webpack://@lenna-proj/lenna-web/./src/components/ImageUpload.vue?4182","webpack://@lenna-proj/lenna-web/./src/components/PluginsManager.vue","webpack://@lenna-proj/lenna-web/./src/components/Plugin.vue","webpack://@lenna-proj/lenna-web/./src/components/PluginConfig.vue","webpack://@lenna-proj/lenna-web/./src/components/PluginConfig.vue?9bfb","webpack://@lenna-proj/lenna-web/./src/components/PluginConfig.vue?a92a","webpack://@lenna-proj/lenna-web/./src/components/Checkbox.vue","webpack://@lenna-proj/lenna-web/./src/components/Checkbox.vue?3095","webpack://@lenna-proj/lenna-web/./src/components/Checkbox.vue?4fbc","webpack://@lenna-proj/lenna-web/./src/components/Icon.vue?62a3","webpack://@lenna-proj/lenna-web/./src/components/Icon.vue?433b","webpack://@lenna-proj/lenna-web/./src/components/Icon.vue","webpack://@lenna-proj/lenna-web/./src/components/Plugin.vue?f390","webpack://@lenna-proj/lenna-web/./src/components/Plugin.vue?1d89","webpack://@lenna-proj/lenna-web/./src/components/PluginsManager.vue?d84f","webpack://@lenna-proj/lenna-web/./src/components/PluginsManager.vue?4be4","webpack://@lenna-proj/lenna-web/./src/views/About.vue","webpack://@lenna-proj/lenna-web/./src/components/Help.vue","webpack://@lenna-proj/lenna-web/./src/views/About.vue?99e7","webpack://@lenna-proj/lenna-web/./src/views/About.vue?b54e","webpack://@lenna-proj/lenna-web/./src/components/Help.vue?ed81","webpack://@lenna-proj/lenna-web/./src/views/Batch.vue?1a2b","webpack://@lenna-proj/lenna-web/./src/views/Home.vue","webpack://@lenna-proj/lenna-web/./src/components/Mountains.vue","webpack://@lenna-proj/lenna-web/./src/components/Mountains.vue?e458","webpack://@lenna-proj/lenna-web/./src/components/AboutProject.vue","webpack://@lenna-proj/lenna-web/./src/components/HowToTile.vue","webpack://@lenna-proj/lenna-web/./src/components/HowToTile.vue?07e9","webpack://@lenna-proj/lenna-web/./src/components/HowToTile.vue?38b5","webpack://@lenna-proj/lenna-web/./src/components/AboutProject.vue?4924","webpack://@lenna-proj/lenna-web/./src/components/AboutProject.vue?1615","webpack://@lenna-proj/lenna-web/./src/components/HowToConvert.vue","webpack://@lenna-proj/lenna-web/./src/components/HowToConvert.vue?3e59","webpack://@lenna-proj/lenna-web/./src/components/HowToConvert.vue?9f5d","webpack://@lenna-proj/lenna-web/./src/views/Home.vue?58e5","webpack://@lenna-proj/lenna-web/./src/views/Home.vue?caea","webpack://@lenna-proj/lenna-web/./src/components/ImagePreview.vue","webpack://@lenna-proj/lenna-web/./src/views/Batch.vue"],"sourcesContent":["\nimport { defineComponent } from \"vue\";\nimport VueEasyLightbox from \"vue-easy-lightbox\";\nimport { saveAs } from \"file-saver\";\nimport JSZip from \"jszip\";\nimport { useToast } from \"vue-toastification\";\nimport { convert } from \"@lenna-proj/lenna-cli\";\nimport { ImageSource } from \"../models/image\";\n\ndeclare interface FileOption {\n  text: string;\n  value: string;\n}\n\ndeclare interface ImagePreviewData {\n  imgs: string[];\n  visible: boolean;\n  index: number;\n  filetype: string;\n  options: Array<FileOption>;\n}\n\nexport default defineComponent({\n  components: {\n    VueEasyLightbox,\n  },\n  props: {\n    images: {\n      type: Array as () => Array<ImageSource>,\n      required: true,\n    },\n  },\n  data(): ImagePreviewData {\n    return {\n      imgs: [],\n      visible: false,\n      index: 0,\n      filetype: \"png\",\n      options: [\n        { text: \"png\", value: \"png\" },\n        { text: \"jpg\", value: \"jpg\" },\n        { text: \"bmp\", value: \"bmp\" },\n        { text: \"ico\", value: \"ico\" },\n        { text: \"gif\", value: \"gif\" },\n      ],\n    };\n  },\n  methods: {\n    createObjectURL(image: ImageSource) {\n      return URL.createObjectURL(image);\n    },\n    async safeImage(file: any, format: string) {\n      let data = await file\n        .arrayBuffer()\n        .then((image: any) => new Uint8Array(image));\n      return convert(data, format);\n    },\n    async downloadZip() {\n      let zip = new JSZip();\n      const toast = useToast();\n      const imageCount = this.images.length;\n      if (imageCount < 1) {\n        return;\n      }\n      let compressedCount = 0;\n      toast.info(`compressing of ${this.images.length} images started`);\n      let promises = this.images.map((image: ImageSource) => {\n        let type = `image/${this.filetype}`;\n\n        return this.safeImage(image, this.filetype).then(\n          (compressed_image) => {\n            let file = new File([compressed_image], image.name, { type });\n            compressedCount++;\n            toast.success(\n              `compressed ${image.name} ${compressedCount} / ${imageCount} images`\n            );\n            return zip.file(\n              `${image.name.replace(/(\\.[^/.]+)+$/, \"\")}.${this.filetype}`,\n              file\n            );\n          }\n        );\n      });\n      await Promise.all(promises);\n      zip.generateAsync({ type: \"blob\" }).then(function (blob) {\n        saveAs(blob, \"images.zip\");\n      });\n    },\n    show() {\n      this.visible = true;\n    },\n    showImg(index: any) {\n      this.index = index;\n      this.visible = true;\n    },\n    handleHide() {\n      this.visible = false;\n    },\n  },\n  watch: {\n    $props: {\n      handler() {\n        this.imgs = [];\n        this.index = 0;\n        this.images.forEach((image) => {\n          this.imgs.push(this.createObjectURL(image));\n        });\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n});\n","\nimport { defineComponent, ref } from \"vue\";\nimport * as NProgress from \"nprogress\";\nimport { useToast } from \"vue-toastification\";\nimport PluginsManager from \"../components/PluginsManager.vue\";\nimport ImageUpload from \"../components/ImageUpload.vue\";\nimport ImagePreview from \"../components/ImagePreview.vue\";\nimport { PluginManager } from \"../controllers/plugin_manager\";\nimport { Image } from \"../models/image\";\nimport { processImages } from \"../controllers/processor\";\nimport { listPlugins } from \"../controllers/storage\";\n\nexport declare interface BatchData {\n  pluginUrl: string;\n  just: string | null;\n  defaultConfig: [];\n  defaultPlugins: string[];\n  sourceImages: Image[];\n  resultImages: Image[];\n  pluginManager: PluginManager;\n}\n\nexport default defineComponent({\n  name: \"Batch\",\n  components: {\n    PluginsManager,\n    ImageUpload,\n    ImagePreview\n  },\n  data(): BatchData {\n    return {\n      pluginUrl: \"\",\n      just: null,\n      defaultConfig: [],\n      defaultPlugins: [],\n      sourceImages: [],\n      resultImages: [],\n      pluginManager: new PluginManager(\"\"),\n    };\n  },\n  setup: () => {\n    const imageUpload = ref(ImageUpload);\n    const pluginsManager = ref(PluginsManager);\n    return {\n      imageUpload,\n      pluginsManager,\n    };\n  },\n  created() {\n    if (this.$route.query[\"config\"]) {\n      this.defaultConfig = JSON.parse(\n        // eslint-disable-next-line no-undef\n        Buffer.from(this.$route.query[\"config\"].toString(), \"base64\").toString(\n          \"binary\"\n        )\n      );\n      console.log(this.defaultConfig);\n    }\n    if (this.$route.query.plugin) {\n      this.defaultPlugins = [this.$route.query.plugin.toString()];\n    }\n    if (this.$route.query.just) {\n      this.pluginManager.filter = this.$route.query.just.toString();\n      this.just = this.$route.query.just.toString();\n    }\n    this.loadDefaultPluginsMap();\n    this.loadDefaultPluginJson();\n    this.loadAddedPlugins();\n  },\n  methods: {\n    loadPlugin(pluginUrl: string) {\n      console.log(\"loaded plugin: \", pluginUrl);\n      this.pluginManager.importPlugin(pluginUrl, pluginUrl);\n    },\n\n    loadDefaultPluginsMap() {\n      this.pluginManager.importPluginMap(\n        \"https://lenna.app/lenna-plugins/importmap.json\"\n      );\n    },\n    loadDefaultPluginJson() {\n      this.pluginManager.importPluginsJson(\n        \"https://lenna.app/lenna-plugins/plugins.json\"\n      );\n    },\n    loadAddedPlugins() {\n      listPlugins().forEach((plugin) => {\n        this.pluginManager.importPlugin(plugin, plugin);\n      });\n    },\n    onMorePlugins() {\n      window.location.replace(\"/marketplace\");\n    },\n    changeImages(files: any) {\n      this.sourceImages.push(files.file);\n    },\n    async processImages() {\n      NProgress.configure({ parent: \"#process\" });\n      NProgress.start();\n      const toast = useToast();\n\n      await processImages(\n        this.sourceImages,\n        this.resultImages,\n        this.pluginManager.getPlugins(),\n        {\n          info: (message: string) => {\n            toast.info(message);\n          },\n          success: (message: string) => {\n            toast.success(message);\n          },\n        },\n        NProgress.set\n      );\n\n      this.imageUpload.images = [];\n      this.sourceImages = [];\n\n      NProgress.done();\n      NProgress.remove();\n    },\n  },\n});\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport route from \"./router\"\nimport \"./styles/index.scss\";\n\nimport Toast, { POSITION } from \"vue-toastification\";\nimport \"vue-toastification/dist/index.css\";\n\ncreateApp(App)\n  .use(route)\n  .use(Toast, { position: POSITION.TOP_LEFT })\n  .mount(\"#app\");\n","import { LennaPlugin } from '../models/plugin';\nimport { PluginModule } from '../models/plugin_module';\nimport { Config } from '../models/config';\nimport { loadConfig } from \"../controllers/storage\";\n\nexport class PluginManager {\n\n    configs: Config[] = []\n    plugins: LennaPlugin[] = []\n\n    filter: string = \"\"\n\n    constructor(filter: string) {\n        this.filter = filter;\n    }\n\n    async importPlugin(key: string, url: string) {\n        // eslint-disable-next-line no-undef\n        return System.import(url).then(async (module: any) => {\n            // eslint-disable-next-line no-undef\n            await module.init(__webpack_require__.S[\"default\"]);\n            return module.get(\"default\").then((plugin: Function) => {\n                this.importModule(key, url, plugin());\n            });\n        });\n    }\n\n    async importModule(key: string, url: string, module: PluginModule) {\n        const pluginConfig = loadConfig({\n            name: key,\n            url: url,\n            plugin: module,\n            enabled: false,\n            config: {},\n        });\n        if (this.filter.length > 0) {\n            if (pluginConfig.name.includes(this.filter)) {\n                pluginConfig.enabled = true;\n                this.configs.push({\n                    name: pluginConfig.name,\n                    enabled: true,\n                    config: pluginConfig.config,\n                });\n                this.plugins.push(pluginConfig);\n            }\n        } else {\n            this.plugins.push(pluginConfig);\n        }\n    }\n\n    async importPluginMap(mapUrl: string) {\n        const tasks = [];\n        const res = await fetch(mapUrl);\n        const data = await res.json();\n        for (const key in data.imports) {\n            const url = data.imports[key];\n            tasks.push(\n                System.import(key).then((plugin: PluginModule) => {\n                    return this.importModule(key, url, plugin);\n                })\n            );\n        }\n        return Promise.all(tasks);\n    }\n\n    async importPluginsJson(jsonUrl: string) {\n        const tasks = [];\n        const res = await fetch(jsonUrl);\n        const data = await res.json();\n        for (const key in data.plugins) {\n            const url = data.plugins[key];\n            tasks.push(this.importPlugin(key, url));\n        }\n        return Promise.all(tasks);\n    }\n\n    changeConfig(name: string, config: Object) {\n        const plugin = this.plugins.find((o: LennaPlugin) => o.name === name);\n        if (plugin) {\n            plugin.config = config;\n        }\n    }\n\n    getPlugins(): LennaPlugin[] {\n        return this.plugins;\n    }\n}\n","import { LennaPlugin } from \"../models/plugin\";\nimport { Logger } from \"../models/logger\";\nimport { Image } from \"../models/image\";\n\nconst processImages = async (sourceImages: Image[], resultImages: Image[], plugins: LennaPlugin[], logger: Logger, progressCallback: Function) => {\n\n    const imageCount = sourceImages.length;\n    let convertedCount = 0;\n    logger.info(`converting ${imageCount} images started`);\n    resultImages.length = 0;\n    const tasks = [];\n    for (const sourceImage of sourceImages) {\n        tasks.push(\n            processImage(sourceImage, plugins, progressCallback).then((image) => {\n                const file = new File([image], sourceImage.name, {\n                    type: \"image/png\",\n                });\n                resultImages.push(file);\n                convertedCount++;\n                logger.success(\n                    `converted ${convertedCount} of ${imageCount} images`\n                );\n            })\n        );\n    }\n    return Promise.all(tasks).then(() => {\n        logger.info(`converted ${convertedCount} images`);\n    });\n}\n\n\nconst processImage = async (imageFile: any, plugins: LennaPlugin[], progressCallback: Function) => {\n    let progress = 0.0;\n    let img = new Uint8Array(await imageFile.arrayBuffer());\n    for (const plugin of plugins) {\n        progressCallback(progress);\n        progress += 1 / plugins.length;\n        if (plugin.enabled) {\n            img = await plugin.plugin?.process(plugin.config, img);\n        }\n    }\n    progressCallback(1.0);\n    return img;\n}\n\nexport { processImages, processImage }\n","import { LennaPlugin } from \"../models/plugin\";\nimport { Config } from \"../models/config\";\n\nconst saveConfig = (plugin: LennaPlugin) => {\n    const config: Config = {\n        name: plugin.name,\n        enabled: plugin.enabled,\n        config: plugin.config,\n    };\n    localStorage.setItem(plugin.name, JSON.stringify(config));\n};\n\nconst loadConfig = (plugin: LennaPlugin): LennaPlugin => {\n    const savedConfig = localStorage.getItem(plugin.name);\n    if (savedConfig) {\n        const config: Config = JSON.parse(savedConfig);\n        plugin.enabled = config.enabled;\n        plugin.config = Object.assign(plugin.config, config.config);\n    }\n    return plugin;\n};\n\nconst loadConfigFromParams = (plugin: LennaPlugin, params: Config[]): LennaPlugin => {\n    params.forEach((config: Config) => {\n        if (config.name === plugin.name) {\n            plugin.enabled = config.enabled;\n            plugin.config = Object.assign(plugin.config, config.config);\n        }\n    });\n    return plugin;\n};\n\nconst addPlugin = (plugin: string) => {\n    const plugins: string[] = JSON.parse(localStorage.getItem(\"plugins\") || \"[]\");\n    if (!plugins.includes(plugin)) {\n        plugins.push(plugin);\n        localStorage.setItem(\"plugins\", JSON.stringify(plugins));\n    }\n};\n\nconst listPlugins = (): string[] => {\n    const plugins = localStorage.getItem(\"plugins\") || \"[]\";\n    return JSON.parse(plugins);\n}\n\nexport { saveConfig, loadConfig, loadConfigFromParams, addPlugin, listPlugins };\n","import { createWebHistory, createRouter } from \"vue-router\";\nimport Home from \"@/views/Home.vue\";\nimport Batch from \"@/views/Batch.vue\";\nimport About from \"@/views/About.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    component: Home,\n  },\n  {\n    path: \"/batch\",\n    name: \"Batch\",\n    component: Batch,\n  },\n  {\n    path: \"/about\",\n    name: \"About\",\n    component: About,\n  },\n  {\n    path: \"/just/${just}\",\n    name: \"Just\",\n    component: Home,\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nexport default router;","<template>\n  <div class=\"navbar\">\n    <div id=\"banner\"><img src=\"@/assets/banner.png\" /></div>\n    <router-link to=\"/\">Home</router-link>\n    <router-link to=\"/batch\">Process Image</router-link>\n    <router-link to=\"/about\">Contact us</router-link>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"Navbar\",\n});\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n\n$navbar_padding: 20px;\n\n.navbar {\n  padding: 0px $navbar_padding;\n  position: fixed;\n  top: 0;\n  width: calc(100% - 2 * #{$navbar_padding});\n  height: 66px;\n  margin: 0;\n  overflow: hidden;\n  background-color: $nav_background;\n  justify-content: flex-end;\n  display: flex;\n  color: $text_color;\n  text-transform: uppercase;\n}\n\n.navbar a {\n  display: block;\n  color: $text_color;\n  text-align: center;\n  margin: 18px 10px;\n  text-decoration: none;\n\n  font-family: \"Quicksand\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 22px;\n\n  color: #ffffff;\n}\n\n/*\n.navbar a:hover {\n  background-color: $primary_color;\n}\n.navbar .router-link-active {\n  color: white;\n  background-color: $primary_color;\n}\n\n.navbar a:active {\n  background-color: $primary_color;\n  transform: translateY(8px);\n  opacity: 0.5;\n}\n*/\n\n#banner {\n  position: absolute;\n  top: 10px;\n  left: 2%;\n}\n\n#banner img {\n  max-height: 46px;\n}\n\n@media screen and (max-width: 800px) {\n  #banner {\n    left: 10px;\n    top: 40px;\n  }\n  #banner img {\n    display: none;\n  }\n  #banner::before {\n    background-image: url(\"https://lenna.app/logo.png\");\n    background-size: 30px 30px;\n    width: 30px;\n    height: 30px;\n    display: inline-block;\n    content: \"\";\n  }\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"Navbar\",\n});\n","import { render } from \"./Navbar.vue?vue&type=template&id=df3b6a4c&scoped=true\"\nimport script from \"./Navbar.vue?vue&type=script&lang=ts\"\nexport * from \"./Navbar.vue?vue&type=script&lang=ts\"\n\nimport \"./Navbar.vue?vue&type=style&index=0&id=df3b6a4c&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-df3b6a4c\"\n\nexport default script","<template>\n  <div class=\"footer\">\n    <v-footer>\n      Convert images online without upload of your data.\n      <p>\n        &copy; {{ new Date().getFullYear() }} —\n        <a href=\"https://lenna.app\"> lenna.app </a>\n      </p>\n    </v-footer>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"Footer\"\n});\n</script>\n<style scoped>\n.footer {\n  text-align: center;\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"Footer\"\n});\n","import { render } from \"./Footer.vue?vue&type=template&id=06c5fd87&scoped=true\"\nimport script from \"./Footer.vue?vue&type=script&lang=ts\"\nexport * from \"./Footer.vue?vue&type=script&lang=ts\"\n\nimport \"./Footer.vue?vue&type=style&index=0&id=06c5fd87&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-06c5fd87\"\n\nexport default script","<template>\n  <div>\n  <Navbar />\n  <router-view />\n  <Footer />\n  </div>\n</template>\n<script>\nimport { defineComponent } from \"vue\";\nimport Navbar from \"@/components/Navbar.vue\";\nimport Footer from \"@/components/Footer.vue\";\nexport default defineComponent({\n  name: \"App\",\n  components: {\n    Navbar,\n    Footer\n  },\n});\n</script>","import { render } from \"./App.vue?vue&type=template&id=0acc35d2\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./ImagePreview.vue?vue&type=template&id=3273a88c&scoped=true\"\nimport script from \"./ImagePreview.vue?vue&type=script&lang=ts\"\nexport * from \"./ImagePreview.vue?vue&type=script&lang=ts\"\n\nimport \"./ImagePreview.vue?vue&type=style&index=0&id=3273a88c&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-3273a88c\"\n\nexport default script","<template>\n  <div class=\"image-upload\">\n    <FileUpload\n      :multiple=\"true\"\n      :drop=\"true\"\n      :drop-directory=\"true\"\n      extensions=\"gif,jpg,jpeg,png,webp\"\n      accept=\"image/png,image/gif,image/jpeg,image/webp\"\n      v-model=\"files\"\n      @input-filter=\"inputFilter\"\n      @input-file=\"inputFile\"\n      ref=\"upload\"\n      class=\"file-upload\"\n    >\n      <div class=\"upload-container\">\n        <img src=\"../assets/add_image.svg\" />\n        <div class=\"upload-text\">Drop files here<br />or</div>\n        <div id=\"upload-button\">Select Files...</div>\n      </div>\n    </FileUpload>\n    <div v-if=\"images.length > 0\" class=\"image-container\">\n      <div\n        v-for=\"(src, index) in images\"\n        :key=\"index\"\n        class=\"pic\"\n        @click=\"() => showImg(index)\"\n      >\n        <img height=\"140\" :src=\"src\" />\n      </div>\n      <vue-easy-lightbox\n        escDisabled\n        moveDisabled\n        :visible=\"visible\"\n        :imgs=\"images\"\n        :index=\"index\"\n        @hide=\"handleHide\"\n      ></vue-easy-lightbox>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport FileUpload from \"vue-upload-component\";\nimport VueEasyLightbox from \"vue-easy-lightbox\";\n\nexport declare interface ImageUploadData {\n  files: Object[];\n  images: Object[];\n  visible: boolean;\n  index: number;\n}\n\nexport default defineComponent({\n  components: {\n    FileUpload,\n    VueEasyLightbox,\n  },\n  data(): ImageUploadData {\n    return {\n      files: [],\n      images: [],\n      visible: false,\n      index: 0,\n    };\n  },\n  methods: {\n    // eslint-disable-next-line no-unused-vars\n    inputFile(newFile: any, oldFile: any, prevent: any) {\n      this.images.push(newFile.url);\n      this.$emit(\"changeImage\", newFile);\n    },\n    inputFilter(newFile: any, oldFile: any, prevent: any) {\n      if (newFile && !oldFile) {\n        if (!/\\.(gif|jpg|jpeg|png|webp)$/i.test(newFile.name)) {\n          alert(\"Your choice is not a picture\");\n          return prevent();\n        }\n      }\n      if (newFile && (!oldFile || newFile.file !== oldFile.file)) {\n        newFile.url = \"\";\n        let URL = window.URL || window.webkitURL;\n        if (URL && URL.createObjectURL) {\n          newFile.url = URL.createObjectURL(newFile.file);\n        }\n      }\n    },\n    showImg(index: number) {\n      this.index = index;\n      this.visible = true;\n    },\n    handleHide() {\n      this.visible = false;\n    },\n  },\n});\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n.image-upload {\n  margin: 10px;\n  width: 300px;\n  height: 350px;\n  background-color: $background_color;\n  border: 2px solid black;\n  border-radius: 10px;\n  box-shadow: 10px 5px 5px $shadow;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.file-upload {\n  font-size: 14pt;\n  margin: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.file-upload:hover {\n  transform: scale(1.05);\n}\n.image-container {\n  height: 200px;\n  display: flex;\n  flex-wrap: wrap;\n  overflow-y: auto;\n}\n\n.upload-container {\n  align-content: space-around;\n}\n\n.upload-text {\n  width: 228px;\n  height: 95px;\n  font-family: \"Quicksand\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 27px;\n  line-height: 34px;\n  text-align: center;\n  color: #5c5c5c;\n}\n#upload-button {\n  margin: 20px;\n  padding: 8px;\n  width: 151px;\n  background: #ffffff;\n  border: 1px solid #000000;\n  box-sizing: border-box;\n  border-radius: 5px;\n\n  font-family: \"Quicksand\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 17px;\n  line-height: 21px;\n  color: #000000;\n  text-align: center;\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\nimport FileUpload from \"vue-upload-component\";\nimport VueEasyLightbox from \"vue-easy-lightbox\";\n\nexport declare interface ImageUploadData {\n  files: Object[];\n  images: Object[];\n  visible: boolean;\n  index: number;\n}\n\nexport default defineComponent({\n  components: {\n    FileUpload,\n    VueEasyLightbox,\n  },\n  data(): ImageUploadData {\n    return {\n      files: [],\n      images: [],\n      visible: false,\n      index: 0,\n    };\n  },\n  methods: {\n    // eslint-disable-next-line no-unused-vars\n    inputFile(newFile: any, oldFile: any, prevent: any) {\n      this.images.push(newFile.url);\n      this.$emit(\"changeImage\", newFile);\n    },\n    inputFilter(newFile: any, oldFile: any, prevent: any) {\n      if (newFile && !oldFile) {\n        if (!/\\.(gif|jpg|jpeg|png|webp)$/i.test(newFile.name)) {\n          alert(\"Your choice is not a picture\");\n          return prevent();\n        }\n      }\n      if (newFile && (!oldFile || newFile.file !== oldFile.file)) {\n        newFile.url = \"\";\n        let URL = window.URL || window.webkitURL;\n        if (URL && URL.createObjectURL) {\n          newFile.url = URL.createObjectURL(newFile.file);\n        }\n      }\n    },\n    showImg(index: number) {\n      this.index = index;\n      this.visible = true;\n    },\n    handleHide() {\n      this.visible = false;\n    },\n  },\n});\n","import { render } from \"./ImageUpload.vue?vue&type=template&id=d57ae132&scoped=true\"\nimport script from \"./ImageUpload.vue?vue&type=script&lang=ts\"\nexport * from \"./ImageUpload.vue?vue&type=script&lang=ts\"\n\nimport \"./ImageUpload.vue?vue&type=style&index=0&id=d57ae132&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-d57ae132\"\n\nexport default script","<template>\n  <div class=\"plugins-manager\">\n    <draggable\n      class=\"dragArea list-group plugins\"\n      :list=\"plugins\"\n      @change=\"change()\"\n    >\n      <div class=\"list-group-item\" v-for=\"item in plugins\" :key=\"item.name\">\n        <Plugin\n          :name=\"item.name\"\n          :plugin=\"item.plugin\"\n          :url=\"item.url\"\n          :defaultConfig=\"configs\"\n          @changeEnabled=\"changeEnabled(item.name, $event)\"\n          @changeConfig=\"changeConfig(item.name, $event)\"\n        />\n      </div>\n    </draggable>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { VueDraggableNext } from \"vue-draggable-next\";\nimport Plugin from \"../components/Plugin.vue\";\nimport { LennaPlugin } from \"../models/plugin\";\nimport { PluginManager } from \"../controllers/plugin_manager\";\n\nexport interface Configs {\n  [key: string]: any;\n}\n\nexport declare interface PluginsManagerData {\n  plugins: LennaPlugin[];\n  configs: Configs;\n}\n\nexport default defineComponent({\n  name: \"PluginsManager\",\n  props: {\n    pluginsmap: String,\n    pluginsjson: String,\n    defaultConfig: Object,\n    pluginManager: Object as () => PluginManager,\n    defaultPlugins: Array as () => Array<string>,\n  },\n  components: {\n    Plugin,\n    draggable: VueDraggableNext,\n  },\n  data(): PluginsManagerData {\n    return {\n      plugins: [],\n      configs: {},\n    };\n  },\n  beforeMount() {\n    this.plugins = this.pluginManager?.getPlugins() || [];\n    //this.importPlugin(\"local\", \"http://localhost:3002/remoteEntry.js\");\n  },\n  methods: {\n    changeEnabled(name: string, enabled: boolean) {\n      let plugin = this.plugins.find((o: any) => o.name === name);\n      if (plugin) {\n        plugin.enabled = enabled;\n        this.change();\n      }\n    },\n    changeConfig(name: string, config: Object) {\n      let plugin = this.plugins.find((o: LennaPlugin) => o.name === name);\n      if (plugin) {\n        plugin.config = config;\n      }\n      this.change();\n    },\n    change() {\n      this.$emit(\"change\");\n    },\n    raw(comp: any) {\n      return comp;\n    },\n  },\n});\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n.plugins-manager {\n  background-color: $body_background;\n}\n.plugins {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n}\n</style>\n","<template>\n  <div class=\"plugin\" v-if=\"plugin\">\n    <Icon v-if=\"icon && !enabled\" :src=\"icon\" />\n    <div>\n      <h2>{{ plugin.name() }}</h2>\n      <Checkbox :checked=\"enabled\" @update:checked=\"updateEnabled($event)\" />\n    </div>\n    <div v-if=\"enabled\">\n      <span>{{ plugin.description() }}</span>\n      <div v-if=\"ui && config\">\n        <component\n          :key=\"pluginKey\"\n          :is=\"ui\"\n          :defaultConfig=\"config\"\n          @changeConfig=\"updateConfig($event)\"\n        ></component>\n      </div>\n      <div v-else>\n        <PluginConfig\n          :key=\"pluginKey\"\n          :defaultConfig=\"config\"\n          @changeConfig=\"updateConfig($event)\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { shallowRef, Ref, defineComponent } from \"vue\";\nimport PluginConfig from \"./PluginConfig.vue\";\nimport {PluginModule} from \"../models/plugin_module\";\nimport {Config} from \"../models/config\";\nimport Checkbox from \"./Checkbox.vue\";\nimport Icon from \"./Icon.vue\";\nimport {\n  loadConfig,\n  loadConfigFromParams,\n  saveConfig,\n} from \"@/controllers/storage\";\n\ndeclare interface PluginData {\n  ui: Ref;\n  icon: Ref;\n  processor: any;\n  enabled: boolean;\n  keyCounter: number;\n  pluginKey: string;\n  config: Object;\n}\n\nexport default defineComponent({\n  name: \"Plugin\",\n  props: {\n    name: String,\n    plugin: Object as () => PluginModule,\n    url: String,\n    defaultConfig: Object as () => Config[],\n  },\n  components: {\n    Checkbox,\n    Icon,\n    PluginConfig,\n  },\n  data(): PluginData {\n    return {\n      ui: shallowRef(null),\n      icon: shallowRef(null),\n      processor: null,\n      enabled: false,\n      keyCounter: 0,\n      pluginKey: \"\",\n      config: {},\n    };\n  },\n  methods: {\n    async loadDefaultConfig() {\n      this.plugin?.defaultConfig().then((defaultConfig: any) => {\n        if (this.defaultConfig && this.defaultConfig.length > 0) {\n          const { enabled, config } = loadConfigFromParams(\n            {\n              name: this.name || \"\",\n              enabled: true,\n              config: defaultConfig,\n            },\n            this.defaultConfig\n          );\n          this.config = config;\n          this.enabled = enabled || false;\n        } else {\n          const { enabled, config } = loadConfig({\n            name: this.name || \"\",\n            enabled: false,\n            config: defaultConfig,\n          });\n          this.config = config;\n          this.enabled = enabled || false;\n        }\n      });\n    },\n    async loadUI() {\n      if (this.plugin?.ui && this.url) {\n        // eslint-disable-next-line no-undef\n        System.import(this.url)\n          .then((module: any) => {\n            module.get(\"./Widget\").then((widget: Function) => {\n              this.ui = widget().default;\n            });\n          })\n          .catch((e: any) => console.log(e));\n      }\n      if (this.plugin?.icon) {\n        this.icon = this.plugin.icon();\n      }\n    },\n    async updateConfig(config: Object) {\n      saveConfig({\n        name: this.name || \"\",\n        enabled: this.enabled,\n        config: config,\n      });\n      this.$emit(\"changeConfig\", config);\n    },\n    async updateEnabled(enabled: boolean) {\n      this.enabled = enabled;\n      saveConfig({\n        name: this.name || \"\",\n        enabled: this.enabled,\n        config: this.config,\n      });\n      this.$emit(\"changeEnabled\", enabled);\n    },\n  },\n  created() {\n    console.log(this.name);\n    this.loadUI();\n    this.loadDefaultConfig();\n  },\n  watch: {\n    defaultConfig: {\n      handler: function () {\n        this.keyCounter += 1;\n        this.pluginKey = (this.name || \"\") + this.keyCounter;\n      },\n    },\n  },\n});\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n.plugin {\n  margin: 10px;\n  padding: 10px;\n  min-width: 250px;\n  min-height: 250px;\n  background-color: white;\n  border-radius: 5px;\n  box-shadow: 5px 5px 5px $shadow;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n.plugin:hover {\n  box-shadow: 10px 10px 5px $shadow;\n  transform: scale(1.1);\n}\n.plugin h2 {\n  font-weight: normal;\n  font-style: normal;\n  font-size: 14pt;\n  text-transform: uppercase;\n}\n</style>\n","<template>\n  <div class=\"plugin-config\" v-if=\"config\">\n    <div v-for=\"c in config\" :key=\"c.key\">\n      <div class=\"parameter\">\n        <label>{{ c.key }}: </label>\n        <input\n          type=\"number\"\n          :placeholder=\"c.key\"\n          v-model=\"c.value\"\n          @change=\"updateConfig()\"\n          v-bind:id=\"c.key\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport interface Configs {\n  [key: string]: any;\n}\n\ninterface Config {\n  key: string;\n  value: any;\n}\n\ndeclare interface PluginConfigData {\n  config: Config[];\n}\n\nexport default defineComponent({\n  name: \"PluginConfig\",\n  props: {\n    defaultConfig: Object,\n  },\n  data(): PluginConfigData {\n    return {\n      config: [],\n    };\n  },\n  methods: {\n    async updateConfig() {\n      let config: Configs = {};\n      for (let c of this.config) {\n        config[c.key] = c.value;\n      }\n      this.$emit(\"changeConfig\", config);\n    },\n  },\n  created() {\n    for (let key in this.defaultConfig) {\n      let config = { key: key, value: this.defaultConfig[key] };\n      this.config.push(config);\n    }\n    this.updateConfig();\n  },\n});\n</script>\n\n<style scoped>\n.plugin-config {\n  margin: 5px;\n}\n.parameter {\n  display: flex;\n  justify-content: space-between;\n  min-height: 50px;\n}\n.parameter input {\n  min-width: 50px;\n  max-width: 100px;\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\n\nexport interface Configs {\n  [key: string]: any;\n}\n\ninterface Config {\n  key: string;\n  value: any;\n}\n\ndeclare interface PluginConfigData {\n  config: Config[];\n}\n\nexport default defineComponent({\n  name: \"PluginConfig\",\n  props: {\n    defaultConfig: Object,\n  },\n  data(): PluginConfigData {\n    return {\n      config: [],\n    };\n  },\n  methods: {\n    async updateConfig() {\n      let config: Configs = {};\n      for (let c of this.config) {\n        config[c.key] = c.value;\n      }\n      this.$emit(\"changeConfig\", config);\n    },\n  },\n  created() {\n    for (let key in this.defaultConfig) {\n      let config = { key: key, value: this.defaultConfig[key] };\n      this.config.push(config);\n    }\n    this.updateConfig();\n  },\n});\n","import { render } from \"./PluginConfig.vue?vue&type=template&id=4ae0c414&scoped=true\"\nimport script from \"./PluginConfig.vue?vue&type=script&lang=ts\"\nexport * from \"./PluginConfig.vue?vue&type=script&lang=ts\"\n\nimport \"./PluginConfig.vue?vue&type=style&index=0&id=4ae0c414&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-4ae0c414\"\n\nexport default script","<template>\n  <div class=\"checkbox-container\">\n    <label class=\"checkbox\">\n      <input\n        @input=\"(event) => $emit('update:checked', event.target.checked)\"\n        type=\"checkbox\"\n        :checked=\"checked\"\n        id=\"checkbox\"\n      />\n      <span></span>\n    </label>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"Checkbox\",\n  props: {\n    checked: {\n      type: Boolean,\n    },\n  },\n  emits: [\"update:checked\"],\n  computed: {\n    value: {\n      get() {\n        return this.checked;\n      },\n      set(value: boolean) {\n        this.$emit(\"update:checked\", value);\n      },\n    },\n  },\n});\n</script>\n<style scoped lang=\"scss\">\n.checkbox-container {\n  height: 50px;\n}\n.checkbox {\n  cursor: pointer;\n  position: relative;\n}\n.checkbox > input {\n  height: 40px;\n  width: 50px;\n  position: absolute;\n  left: -25px;\n  top: 0rem;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  -o-appearance: none;\n  appearance: none;\n  border-radius: 25px;\n  outline: none;\n  transition-duration: 0.3s;\n  background-color: #a2f6f2;\n  cursor: pointer;\n}\n.checkbox > input:checked {\n  background-color: #a2f6f2;\n}\n.checkbox > input:checked + span::before {\n  font-size: 2.4em;\n  content: \"\\2713\";\n  text-align: center;\n  color: white;\n  position: absolute;\n  left: -0.5rem;\n  top: 0rem;\n}\n.checkbox > input:active {\n  border: 2px solid #34495e;\n}\n.checkbox-container:hover {\n  transform: scale(0.9);\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"Checkbox\",\n  props: {\n    checked: {\n      type: Boolean,\n    },\n  },\n  emits: [\"update:checked\"],\n  computed: {\n    value: {\n      get() {\n        return this.checked;\n      },\n      set(value: boolean) {\n        this.$emit(\"update:checked\", value);\n      },\n    },\n  },\n});\n","import { render } from \"./Checkbox.vue?vue&type=template&id=411bce60&scoped=true\"\nimport script from \"./Checkbox.vue?vue&type=script&lang=ts\"\nexport * from \"./Checkbox.vue?vue&type=script&lang=ts\"\n\nimport \"./Checkbox.vue?vue&type=style&index=0&id=411bce60&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-411bce60\"\n\nexport default script","import { render } from \"./Icon.vue?vue&type=template&id=223afea4&scoped=true\"\nimport script from \"./Icon.vue?vue&type=script&lang=ts\"\nexport * from \"./Icon.vue?vue&type=script&lang=ts\"\n\nimport \"./Icon.vue?vue&type=style&index=0&id=223afea4&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-223afea4\"\n\nexport default script","\nexport default {\n  props: {\n    src: {\n      type: [Object, String],\n    },\n  },\n};\n","<template>\n  <div>\n    <img id=\"icon\" :src=\"src\" />\n  </div>\n</template>\n<script lang=\"ts\">\nexport default {\n  props: {\n    src: {\n      type: [Object, String],\n    },\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n#icon {\n  margin: 10px;\n  margin-top: 20px;\n  height: 96px;\n  left: 50%;\n}\n</style>\n","\nimport { shallowRef, Ref, defineComponent } from \"vue\";\nimport PluginConfig from \"./PluginConfig.vue\";\nimport {PluginModule} from \"../models/plugin_module\";\nimport {Config} from \"../models/config\";\nimport Checkbox from \"./Checkbox.vue\";\nimport Icon from \"./Icon.vue\";\nimport {\n  loadConfig,\n  loadConfigFromParams,\n  saveConfig,\n} from \"@/controllers/storage\";\n\ndeclare interface PluginData {\n  ui: Ref;\n  icon: Ref;\n  processor: any;\n  enabled: boolean;\n  keyCounter: number;\n  pluginKey: string;\n  config: Object;\n}\n\nexport default defineComponent({\n  name: \"Plugin\",\n  props: {\n    name: String,\n    plugin: Object as () => PluginModule,\n    url: String,\n    defaultConfig: Object as () => Config[],\n  },\n  components: {\n    Checkbox,\n    Icon,\n    PluginConfig,\n  },\n  data(): PluginData {\n    return {\n      ui: shallowRef(null),\n      icon: shallowRef(null),\n      processor: null,\n      enabled: false,\n      keyCounter: 0,\n      pluginKey: \"\",\n      config: {},\n    };\n  },\n  methods: {\n    async loadDefaultConfig() {\n      this.plugin?.defaultConfig().then((defaultConfig: any) => {\n        if (this.defaultConfig && this.defaultConfig.length > 0) {\n          const { enabled, config } = loadConfigFromParams(\n            {\n              name: this.name || \"\",\n              enabled: true,\n              config: defaultConfig,\n            },\n            this.defaultConfig\n          );\n          this.config = config;\n          this.enabled = enabled || false;\n        } else {\n          const { enabled, config } = loadConfig({\n            name: this.name || \"\",\n            enabled: false,\n            config: defaultConfig,\n          });\n          this.config = config;\n          this.enabled = enabled || false;\n        }\n      });\n    },\n    async loadUI() {\n      if (this.plugin?.ui && this.url) {\n        // eslint-disable-next-line no-undef\n        System.import(this.url)\n          .then((module: any) => {\n            module.get(\"./Widget\").then((widget: Function) => {\n              this.ui = widget().default;\n            });\n          })\n          .catch((e: any) => console.log(e));\n      }\n      if (this.plugin?.icon) {\n        this.icon = this.plugin.icon();\n      }\n    },\n    async updateConfig(config: Object) {\n      saveConfig({\n        name: this.name || \"\",\n        enabled: this.enabled,\n        config: config,\n      });\n      this.$emit(\"changeConfig\", config);\n    },\n    async updateEnabled(enabled: boolean) {\n      this.enabled = enabled;\n      saveConfig({\n        name: this.name || \"\",\n        enabled: this.enabled,\n        config: this.config,\n      });\n      this.$emit(\"changeEnabled\", enabled);\n    },\n  },\n  created() {\n    console.log(this.name);\n    this.loadUI();\n    this.loadDefaultConfig();\n  },\n  watch: {\n    defaultConfig: {\n      handler: function () {\n        this.keyCounter += 1;\n        this.pluginKey = (this.name || \"\") + this.keyCounter;\n      },\n    },\n  },\n});\n","import { render } from \"./Plugin.vue?vue&type=template&id=b286d410&scoped=true\"\nimport script from \"./Plugin.vue?vue&type=script&lang=ts\"\nexport * from \"./Plugin.vue?vue&type=script&lang=ts\"\n\nimport \"./Plugin.vue?vue&type=style&index=0&id=b286d410&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-b286d410\"\n\nexport default script","\nimport { defineComponent } from \"vue\";\nimport { VueDraggableNext } from \"vue-draggable-next\";\nimport Plugin from \"../components/Plugin.vue\";\nimport { LennaPlugin } from \"../models/plugin\";\nimport { PluginManager } from \"../controllers/plugin_manager\";\n\nexport interface Configs {\n  [key: string]: any;\n}\n\nexport declare interface PluginsManagerData {\n  plugins: LennaPlugin[];\n  configs: Configs;\n}\n\nexport default defineComponent({\n  name: \"PluginsManager\",\n  props: {\n    pluginsmap: String,\n    pluginsjson: String,\n    defaultConfig: Object,\n    pluginManager: Object as () => PluginManager,\n    defaultPlugins: Array as () => Array<string>,\n  },\n  components: {\n    Plugin,\n    draggable: VueDraggableNext,\n  },\n  data(): PluginsManagerData {\n    return {\n      plugins: [],\n      configs: {},\n    };\n  },\n  beforeMount() {\n    this.plugins = this.pluginManager?.getPlugins() || [];\n    //this.importPlugin(\"local\", \"http://localhost:3002/remoteEntry.js\");\n  },\n  methods: {\n    changeEnabled(name: string, enabled: boolean) {\n      let plugin = this.plugins.find((o: any) => o.name === name);\n      if (plugin) {\n        plugin.enabled = enabled;\n        this.change();\n      }\n    },\n    changeConfig(name: string, config: Object) {\n      let plugin = this.plugins.find((o: LennaPlugin) => o.name === name);\n      if (plugin) {\n        plugin.config = config;\n      }\n      this.change();\n    },\n    change() {\n      this.$emit(\"change\");\n    },\n    raw(comp: any) {\n      return comp;\n    },\n  },\n});\n","import { render } from \"./PluginsManager.vue?vue&type=template&id=fe653878&scoped=true\"\nimport script from \"./PluginsManager.vue?vue&type=script&lang=ts\"\nexport * from \"./PluginsManager.vue?vue&type=script&lang=ts\"\n\nimport \"./PluginsManager.vue?vue&type=style&index=0&id=fe653878&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-fe653878\"\n\nexport default script","<template>\n  <div class=\"about\">\n    <h1>About Lenna Project</h1>\n    <p>\n      Lenna is a library for image processing algorithms. The web page allows to\n      test and use them.\n    </p>\n    <Help />\n    <h2>Thanks</h2>\n      <ul>\n        <li>Silvia (<a href=\"https://github.com/silvia-odwyer/photon\">photon</a>)</li>\n      </ul>\n    <h2>Plugins</h2>\n    <p>\n      Lenna allows to plug in more algorithms. \n      The plugins can be activated for use in the <a href=\"https://lenna.app/marketplace/\">marketplace</a>. \n      Some examples can be found at\n      <a href=\"https://github.com/lenna-project/lenna-plugins\"\n        >lenna-project/lenna-plugins</a\n      >\n      on github.\n      <br/>\n      Following a list of available plugins:\n\n      <ul>\n      <li><b>blur</b> - Blurs the image. The strength can be configured.</li>\n      <li><b>dramatic</b> - Gives the image a dramatic touch.</li>\n      <li><b>exif</b> - Allows to clear exif data of the image.</li>\n      <li><b>rotate</b> - Rotates the image.</li>\n      <li><b>canny</b> - Shows edges of objects in the image.</li>\n      </ul>\n    </p>\n        \n    <h2>Jupyter Notebooks</h2>\n    View some notebooks <a href=\"/jupyter\">here</a> to see how the plugins can be used in python.\n    \n    <h2>Command Line Interface</h2>\n    <iframe src=\"https://snapcraft.io/lenna-cli/embedded?button=black&summary=true\" frameborder=\"0\" width=\"100%\" height=\"380px\" style=\"border: 1px solid #CCC; border-radius: 2px;\"></iframe>\n    <p>\n      A command line interface allows to use the algorithms and run them on\n      multiple images at once. The source for\n      <a href=\"https://github.com/lenna-project/lenna-cli\">lenna-cli</a>\n      can be found on github.\n    </p>\n    <img src=\"https://raw.githubusercontent.com/lenna-project/lenna-cli/main/docs/images/run.gif\" />\n\n    <h2>Desktop App</h2>\n    <a href=\"https://sourceforge.net/projects/lenna/files/latest/download\"><img alt=\"Download lenna\" src=\"https://a.fsdn.com/con/app/sf-download-button\" width=276 height=48 srcset=\"https://a.fsdn.com/con/app/sf-download-button?button_size=2x 2x\"></a>\n    <br />\n    <iframe src=\"https://snapcraft.io/lenna/embedded?button=black&summary=true&screenshot=true\" frameborder=\"0\" width=\"100%\" height=\"620px\" style=\"border: 1px solid #CCC; border-radius: 2px;\"></iframe>\n\n    <h2>Desktop Web App</h2>\n    <a href=\"https://github.com/lenna-project/lenna-gui/releases/latest\">Lenna GUI</a>\n    This App supports convertion of images in folders.\n    <br />\n    You can find installers for Mac, Linux and Windows.\n    <br />\n\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Help from \"../components/Help.vue\";\n\nexport default {\n  name: \"About\",\n  components: {\n    Help,\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n.about {\n  padding: 100px;\n  padding-left: 30%;\n  background-color: $body_background;\n  height: 100%;\n}\n</style>\n","<template>\n  <div class=\"help\">\n    <h2>How to Convert Images</h2>\n    <ol>\n      <li>Drop images into left box.</li>\n      <li>Enable the plugins you want to use in convertion.</li>\n      <li>Order the plugins via drag and drop</li>\n      <li>Press the process button.</li>\n      <li>Select file type you want to download on the right.</li>\n      <li>Download your converted images compressed as zip.</li>\n    </ol>\n  </div>\n</template>\n<script setup lang=\"ts\">\n</script>\n<style scoped>\n.help {\n  display: block;\n}\n</style>\n","import { render } from \"./About.vue?vue&type=template&id=5155017c&scoped=true\"\nimport script from \"./About.vue?vue&type=script&lang=ts\"\nexport * from \"./About.vue?vue&type=script&lang=ts\"\n\nimport \"./About.vue?vue&type=style&index=0&id=5155017c&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-5155017c\"\n\nexport default script","\nimport Help from \"../components/Help.vue\";\n\nexport default {\n  name: \"About\",\n  components: {\n    Help,\n  },\n};\n","import { render } from \"./Help.vue?vue&type=template&id=0067483e&scoped=true\"\nconst script = {}\n\nimport \"./Help.vue?vue&type=style&index=0&id=0067483e&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-0067483e\"\n\nexport default script","import { render } from \"./Batch.vue?vue&type=template&id=eef3d008&scoped=true\"\nimport script from \"./Batch.vue?vue&type=script&lang=ts\"\nexport * from \"./Batch.vue?vue&type=script&lang=ts\"\n\nimport \"./Batch.vue?vue&type=style&index=0&id=eef3d008&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-eef3d008\"\n\nexport default script","<template>\n  <div>\n    <div class=\"main\">\n      <h1>Convert images online<br/> without upload of your data</h1>\n      <Mountains />\n      <router-link class=\"process-image-button\" to=\"/batch\">Process Image</router-link>\n      <AboutProject />\n      <HowToConvert />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from \"vue\";\nimport Mountains from \"../components/Mountains.vue\";\nimport AboutProject from \"../components/AboutProject.vue\";\nimport HowToConvert from \"../components/HowToConvert.vue\";\n\nexport default defineComponent({\n  name: \"Home\",\n  components: {\n    Mountains,\n    AboutProject,\n    HowToConvert,\n  },\n});\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n@import url(\"https://fonts.googleapis.com/css2?family=Amatic+SC&display=swap\");\n\n.main {\n  background-color: $body_background;\n  padding: 150px;\n  padding-top: 120px;\n  text-align: center;\n  background-image: url(\"../assets/mainbg.svg\");\n  background-size: contain;\n  background-repeat: no-repeat;\n}\n.main h1 {\n  text-transform: uppercase;\n  font-family: \"Amatic SC\", cursive;\n  font-size: 32pt;\n}\n.main hr {\n  margin-top: 10px;\n  border: none;\n  border-top: 2px dotted blue;\n  color: #fff;\n  background-color: #fff;\n  height: 2px;\n  width: 100%;\n}\n.top_main {\n  display: flex;\n  justify-content: center;\n}\n.bottom_main {\n  padding-top: 20px;\n  padding-bottom: 0;\n}\n\n.process-image-button {\n  display: inline-block;\n  text-decoration: inherit;\n  margin: 40px;\n  width: 248px;\n  padding: 25px;\n\n  background: #d8c6c6;\n  border-radius: 11px;\n\n  font-family: \"Quicksand\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 30px;\n\n  color: #000000;\n}\n\n@media screen and (max-width: 800px) {\n  .main {\n    margin-top: 120px;\n    padding: 0;\n  }\n  #process button {\n    width: 150px;\n  }\n}\n</style>\n","<template>\n  <div id=\"container\">\n    <span id=\"mountain1\" />\n    <div id=\"container-right\">\n      <span id=\"mountain2\" />\n      <span id=\"mountain3\" />\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\n</script>\n<style scoped lang=\"css\">\n#container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#container-right {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n}\n\n#mountain1 {\n  width: 480px;\n  height: 320px;\n  background: url(\"../assets/mountain1.png\");\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  border-radius: 17px;\n}\n\n#mountain2 {\n  margin: 5px;\n  width: 224px;\n  height: 150px;\n  background: url(\"../assets/mountain2.png\");\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  border-radius: 14px;\n}\n\n#mountain3 {\n  margin: 5px;\n  width: 224px;\n  height: 150px;\n  background: url(\"../assets/mountain3.png\");\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  border-radius: 14px;\n}\n</style>\n","import { render } from \"./Mountains.vue?vue&type=template&id=836ff504&scoped=true\"\nconst script = {}\n\nimport \"./Mountains.vue?vue&type=style&index=0&id=836ff504&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-836ff504\"\n\nexport default script","<template>\n  <p id=\"title\">About the project</p>\n  <div id=\"container\">\n    <div id=\"tile1\"></div>\n    <div id=\"tile2\">\n      Imaging &amp; Co. is a library for image processing algorithms. The web\n      page allows to test and use them.\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport HowToTile from \"./HowToTile.vue\";\nexport default {\n  components: {\n    HowToTile,\n  },\n};\n</script>\n<style scoped lang=\"css\">\n#title {\n  font-family: \"Quicksand\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 36px;\n  line-height: 45px;\n  color: #000000;\n}\n#container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n#tile1 {\n  margin: 20px;\n  width: 561px;\n  height: 374px;\n\n  border-radius: 17px;\n  background-image: url(\"../assets/about_project_tile1.jpg\");\n  background-size: contain;\n}\n#tile2 {\n  margin: 20px;\n  padding: 110px 30px;\n  font-family: \"Quicksand\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 30px;\n  color: #000000;\n\n  width: 495px;\n  height: 104px;\n  background-image: url(\"../assets/about_project_tile2.svg\");\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n</style>\n","<template>\n  <div class=\"howtotile\">\n    <p id=\"text\">{{text}}</p>\n  </div>\n</template>\n<script lang=\"ts\">\nexport default {\n  props: {\n    text: {\n      type: [String],\n    },\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n.howtotile {\n  width: 289px;\n  height: 342px;\n  margin: 30px;\n  padding: 30px;\n\n  background: #c4c4c4;\n  border-radius: 12px;\n}\n\n#text {\n  font-family: \"Quicksand\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 30px;\n\n  color: #000000;\n}\n</style>\n","import { render } from \"./HowToTile.vue?vue&type=template&id=5caaf127&scoped=true\"\nimport script from \"./HowToTile.vue?vue&type=script&lang=ts\"\nexport * from \"./HowToTile.vue?vue&type=script&lang=ts\"\n\nimport \"./HowToTile.vue?vue&type=style&index=0&id=5caaf127&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-5caaf127\"\n\nexport default script","\nexport default {\n  props: {\n    text: {\n      type: [String],\n    },\n  },\n};\n","import { render } from \"./AboutProject.vue?vue&type=template&id=4db0d360&scoped=true\"\nimport script from \"./AboutProject.vue?vue&type=script&lang=ts\"\nexport * from \"./AboutProject.vue?vue&type=script&lang=ts\"\n\nimport \"./AboutProject.vue?vue&type=style&index=0&id=4db0d360&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-4db0d360\"\n\nexport default script","\nimport HowToTile from \"./HowToTile.vue\";\nexport default {\n  components: {\n    HowToTile,\n  },\n};\n","<template>\n  <p id=\"title\">How to convert images</p>\n  <div id=\"tiles\">\n  <HowToTile text=\"1. Upload the image\" />\n  <HowToTile text=\"2. Enable the plugins\" />\n  <HowToTile\n    text=\"3. You can order the plugins by dragging and dropping them\"\n  />\n  <HowToTile text=\"4. Press the ‘Process button’.\" />\n  </div>\n</template>\n<script lang=\"ts\">\nimport HowToTile from \"./HowToTile.vue\";\nexport default {\n  components: {\n    HowToTile,\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n#title {\n  font-family: \"Quicksand\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 36px;\n  line-height: 45px;\n  color: #000000;\n}\n#tiles {\n  display: flex;\n}\n</style>\n","import { render } from \"./HowToConvert.vue?vue&type=template&id=1d035855&scoped=true\"\nimport script from \"./HowToConvert.vue?vue&type=script&lang=ts\"\nexport * from \"./HowToConvert.vue?vue&type=script&lang=ts\"\n\nimport \"./HowToConvert.vue?vue&type=style&index=0&id=1d035855&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-1d035855\"\n\nexport default script","\nimport HowToTile from \"./HowToTile.vue\";\nexport default {\n  components: {\n    HowToTile,\n  },\n};\n","\nimport { defineComponent, ref } from \"vue\";\nimport Mountains from \"../components/Mountains.vue\";\nimport AboutProject from \"../components/AboutProject.vue\";\nimport HowToConvert from \"../components/HowToConvert.vue\";\n\nexport default defineComponent({\n  name: \"Home\",\n  components: {\n    Mountains,\n    AboutProject,\n    HowToConvert,\n  },\n});\n","import { render } from \"./Home.vue?vue&type=template&id=a5bd0002&scoped=true\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=a5bd0002&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-a5bd0002\"\n\nexport default script","<template>\n  <div class=\"image-preview\">\n    <div id=\"save\">\n      <select v-model=\"filetype\">\n        <option\n          v-for=\"option in options\"\n          :value=\"option.value\"\n          :key=\"option.text\"\n        >\n          {{ option.text }}\n        </option>\n      </select>\n      <p v-on:click=\"downloadZip\">save files</p>\n    </div>\n    <br />\n    <div v-if=\"imgs.length > 0\" class=\"image-container\">\n      <div\n        v-for=\"(src, index) in imgs\"\n        :key=\"index\"\n        class=\"pic\"\n        @click=\"() => showImg(index)\"\n      >\n        <img height=\"140\" :src=\"src\" />\n      </div>\n    </div>\n    <vue-easy-lightbox\n      escDisabled\n      moveDisabled\n      :visible=\"visible\"\n      :imgs=\"imgs\"\n      :index=\"index\"\n      @hide=\"handleHide\"\n    ></vue-easy-lightbox>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport VueEasyLightbox from \"vue-easy-lightbox\";\nimport { saveAs } from \"file-saver\";\nimport JSZip from \"jszip\";\nimport { useToast } from \"vue-toastification\";\nimport { convert } from \"@lenna-proj/lenna-cli\";\nimport { ImageSource } from \"../models/image\";\n\ndeclare interface FileOption {\n  text: string;\n  value: string;\n}\n\ndeclare interface ImagePreviewData {\n  imgs: string[];\n  visible: boolean;\n  index: number;\n  filetype: string;\n  options: Array<FileOption>;\n}\n\nexport default defineComponent({\n  components: {\n    VueEasyLightbox,\n  },\n  props: {\n    images: {\n      type: Array as () => Array<ImageSource>,\n      required: true,\n    },\n  },\n  data(): ImagePreviewData {\n    return {\n      imgs: [],\n      visible: false,\n      index: 0,\n      filetype: \"png\",\n      options: [\n        { text: \"png\", value: \"png\" },\n        { text: \"jpg\", value: \"jpg\" },\n        { text: \"bmp\", value: \"bmp\" },\n        { text: \"ico\", value: \"ico\" },\n        { text: \"gif\", value: \"gif\" },\n      ],\n    };\n  },\n  methods: {\n    createObjectURL(image: ImageSource) {\n      return URL.createObjectURL(image);\n    },\n    async safeImage(file: any, format: string) {\n      let data = await file\n        .arrayBuffer()\n        .then((image: any) => new Uint8Array(image));\n      return convert(data, format);\n    },\n    async downloadZip() {\n      let zip = new JSZip();\n      const toast = useToast();\n      const imageCount = this.images.length;\n      if (imageCount < 1) {\n        return;\n      }\n      let compressedCount = 0;\n      toast.info(`compressing of ${this.images.length} images started`);\n      let promises = this.images.map((image: ImageSource) => {\n        let type = `image/${this.filetype}`;\n\n        return this.safeImage(image, this.filetype).then(\n          (compressed_image) => {\n            let file = new File([compressed_image], image.name, { type });\n            compressedCount++;\n            toast.success(\n              `compressed ${image.name} ${compressedCount} / ${imageCount} images`\n            );\n            return zip.file(\n              `${image.name.replace(/(\\.[^/.]+)+$/, \"\")}.${this.filetype}`,\n              file\n            );\n          }\n        );\n      });\n      await Promise.all(promises);\n      zip.generateAsync({ type: \"blob\" }).then(function (blob) {\n        saveAs(blob, \"images.zip\");\n      });\n    },\n    show() {\n      this.visible = true;\n    },\n    showImg(index: any) {\n      this.index = index;\n      this.visible = true;\n    },\n    handleHide() {\n      this.visible = false;\n    },\n  },\n  watch: {\n    $props: {\n      handler() {\n        this.imgs = [];\n        this.index = 0;\n        this.images.forEach((image) => {\n          this.imgs.push(this.createObjectURL(image));\n        });\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n});\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n.image-preview {\n  margin: 10px;\n  width: 300px;\n  height: 350px;\n  background-color: $background_color;\n  border: 2px solid black;\n  border-radius: 10px;\n  box-shadow: 10px 5px 5px $shadow;\n  align-items: center;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.image-container {\n  height: 200px;\n  display: flex;\n  flex-wrap: wrap;\n  overflow-y: auto;\n}\n#save {\n  text-transform: uppercase;\n  font-size: 14pt;\n  cursor: pointer;\n  margin: 10px;\n}\n#save:hover {\n  transform: scale(1.05);\n}\n#save select {\n  height: 40px;\n  min-width: 60px;\n  color: $text_color;\n  font-family: \"Open Sans\", sans-serif;\n  font-size: 16px;\n  cursor: pointer;\n  box-shadow: 2px 2px 5px 1px rgba(0, 0, 0, 0.3);\n  border-radius: 3px;\n  outline: none;\n  background-color: white;\n}\n</style>\n","<template>\n  <div>\n    <div class=\"main\">\n      <h2 v-if=\"just\">{{ just }}</h2>\n      <div class=\"top_main\">\n        <ImageUpload\n          class=\"v-step-3\"\n          ref=\"imageUpload\"\n          @changeImage=\"changeImages($event)\"\n        />\n        <div id=\"process\">\n          <button class=\"v-step-5\" v-on:click=\"processImages\">\n            process images\n          </button>\n        </div>\n        <ImagePreview class=\"v-step-6\" :images=\"resultImages\" />\n      </div>\n      <div class=\"bottom_main\">\n        <PluginsManager\n          class=\"v-step-4\"\n          ref=\"pluginsManager\"\n          :pluginManager=\"pluginManager\"\n          :defaultConfig=\"defaultConfig\"\n          :defaultPlugins=\"defaultPlugins\"\n        />\n      </div>\n      <div id=\"line\">\n        <hr />\n        <div class=\"plus radius\" v-on:click=\"onMorePlugins()\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from \"vue\";\nimport * as NProgress from \"nprogress\";\nimport { useToast } from \"vue-toastification\";\nimport PluginsManager from \"../components/PluginsManager.vue\";\nimport ImageUpload from \"../components/ImageUpload.vue\";\nimport ImagePreview from \"../components/ImagePreview.vue\";\nimport { PluginManager } from \"../controllers/plugin_manager\";\nimport { Image } from \"../models/image\";\nimport { processImages } from \"../controllers/processor\";\nimport { listPlugins } from \"../controllers/storage\";\n\nexport declare interface BatchData {\n  pluginUrl: string;\n  just: string | null;\n  defaultConfig: [];\n  defaultPlugins: string[];\n  sourceImages: Image[];\n  resultImages: Image[];\n  pluginManager: PluginManager;\n}\n\nexport default defineComponent({\n  name: \"Batch\",\n  components: {\n    PluginsManager,\n    ImageUpload,\n    ImagePreview\n  },\n  data(): BatchData {\n    return {\n      pluginUrl: \"\",\n      just: null,\n      defaultConfig: [],\n      defaultPlugins: [],\n      sourceImages: [],\n      resultImages: [],\n      pluginManager: new PluginManager(\"\"),\n    };\n  },\n  setup: () => {\n    const imageUpload = ref(ImageUpload);\n    const pluginsManager = ref(PluginsManager);\n    return {\n      imageUpload,\n      pluginsManager,\n    };\n  },\n  created() {\n    if (this.$route.query[\"config\"]) {\n      this.defaultConfig = JSON.parse(\n        // eslint-disable-next-line no-undef\n        Buffer.from(this.$route.query[\"config\"].toString(), \"base64\").toString(\n          \"binary\"\n        )\n      );\n      console.log(this.defaultConfig);\n    }\n    if (this.$route.query.plugin) {\n      this.defaultPlugins = [this.$route.query.plugin.toString()];\n    }\n    if (this.$route.query.just) {\n      this.pluginManager.filter = this.$route.query.just.toString();\n      this.just = this.$route.query.just.toString();\n    }\n    this.loadDefaultPluginsMap();\n    this.loadDefaultPluginJson();\n    this.loadAddedPlugins();\n  },\n  methods: {\n    loadPlugin(pluginUrl: string) {\n      console.log(\"loaded plugin: \", pluginUrl);\n      this.pluginManager.importPlugin(pluginUrl, pluginUrl);\n    },\n\n    loadDefaultPluginsMap() {\n      this.pluginManager.importPluginMap(\n        \"https://lenna.app/lenna-plugins/importmap.json\"\n      );\n    },\n    loadDefaultPluginJson() {\n      this.pluginManager.importPluginsJson(\n        \"https://lenna.app/lenna-plugins/plugins.json\"\n      );\n    },\n    loadAddedPlugins() {\n      listPlugins().forEach((plugin) => {\n        this.pluginManager.importPlugin(plugin, plugin);\n      });\n    },\n    onMorePlugins() {\n      window.location.replace(\"/marketplace\");\n    },\n    changeImages(files: any) {\n      this.sourceImages.push(files.file);\n    },\n    async processImages() {\n      NProgress.configure({ parent: \"#process\" });\n      NProgress.start();\n      const toast = useToast();\n\n      await processImages(\n        this.sourceImages,\n        this.resultImages,\n        this.pluginManager.getPlugins(),\n        {\n          info: (message: string) => {\n            toast.info(message);\n          },\n          success: (message: string) => {\n            toast.success(message);\n          },\n        },\n        NProgress.set\n      );\n\n      this.imageUpload.images = [];\n      this.sourceImages = [];\n\n      NProgress.done();\n      NProgress.remove();\n    },\n  },\n});\n</script>\n<style scoped lang=\"scss\">\n@import \"@/styles/_variables.scss\";\n@import \"//unpkg.com/nprogress@0.2.0/nprogress.css\";\n@import url(\"https://fonts.googleapis.com/css2?family=Amatic+SC&display=swap\");\n\n.main {\n  background-color: $body_background;\n  padding: 150px;\n  padding-top: 120px;\n  text-align: center;\n  background-image: url(\"../assets/processbg.svg\");\n  background-size: contain;\n  background-repeat: no-repeat;\n}\n.main h1 {\n  text-transform: uppercase;\n  font-family: \"Amatic SC\", cursive;\n  font-size: 32pt;\n}\n.main hr {\n  margin-top: 10px;\n  border: none;\n  border-top: 2px dotted blue;\n  color: #fff;\n  background-color: #fff;\n  height: 2px;\n  width: 100%;\n}\n.top_main {\n  display: flex;\n  justify-content: space-between;\n}\n.bottom_main {\n  padding-top: 20px;\n  padding-bottom: 0;\n}\n#process button {\n  margin-top: 40%;\n  width: 350px;\n  align-self: center;\n  font-size: 20pt;\n  text-transform: uppercase;\n  padding: 12px;\n  border-radius: 30px;\n  border: none;\n  box-shadow: 5px 5px 5px $shadow;\n}\n#process button:hover {\n  transform: scale(1.05);\n}\n#line {\n  margin-top: 50px;\n  position: relative;\n}\n\n.plus {\n  position: absolute;\n  top: -25px;\n  left: calc(50% - 20px);\n\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n\n  background: linear-gradient(#fff, #fff), linear-gradient(#fff, #fff), blue;\n  background-position: center;\n  background-size: 50% 2px, 2px 50%; /*thickness = 2px, length = 50% (25px)*/\n  background-repeat: no-repeat;\n}\n.radius {\n  border-radius: 50%;\n}\n.plus:hover {\n  transform: scale(1.1);\n}\n\n@media screen and (max-width: 800px) {\n  .main {\n    margin-top: 120px;\n    padding: 0;\n  }\n  #process button {\n    width: 150px;\n  }\n}\n</style>\n"],"names":["defineComponent","components","VueEasyLightbox","props","images","type","Array","required","data","imgs","visible","index","filetype","options","text","value","methods","createObjectURL","image","URL","safeImage","file","format","arrayBuffer","then","Uint8Array","downloadZip","zip","toast","imageCount","this","length","compressedCount","info","promises","map","compressed_image","File","name","success","replace","Promise","all","generateAsync","blob","saveAs","show","showImg","handleHide","watch","$props","handler","forEach","push","deep","immediate","PluginsManager","ImageUpload","ImagePreview","pluginUrl","just","defaultConfig","defaultPlugins","sourceImages","resultImages","pluginManager","setup","imageUpload","ref","pluginsManager","created","$route","query","JSON","parse","Buffer","from","toString","console","log","plugin","filter","loadDefaultPluginsMap","loadDefaultPluginJson","loadAddedPlugins","loadPlugin","importPlugin","importPluginMap","importPluginsJson","onMorePlugins","window","location","changeImages","files","processImages","parent","getPlugins","message","createApp","use","position","mount","configs","plugins","key","url","System","import","module","init","__webpack_require__","S","get","importModule","pluginConfig","enabled","config","includes","mapUrl","tasks","fetch","json","imports","jsonUrl","changeConfig","find","o","logger","progressCallback","convertedCount","sourceImage","processImage","imageFile","progress","img","process","saveConfig","localStorage","setItem","stringify","loadConfig","savedConfig","getItem","Object","assign","loadConfigFromParams","params","listPlugins","routes","path","component","createRouter","history","createWebHistory","class","_createElementVNode","id","src","_imports_0","_createElementBlock","_hoisted_2","_createVNode","_component_router_link","to","href","_component_v_footer","_toDisplayString","Date","getFullYear","_hoisted_3","Navbar","Footer","_component_Navbar","_component_router_view","_component_Footer","FileUpload","inputFile","newFile","oldFile","prevent","$emit","inputFilter","test","alert","webkitURL","_component_FileUpload","multiple","drop","extensions","accept","_ctx","$event","onInputFilter","onInputFile","_Fragment","_renderList","onClick","height","_component_vue_easy_lightbox","escDisabled","moveDisabled","onHide","updateConfig","c","placeholder","onChange","checked","Boolean","emits","computed","set","onInput","event","target","_hoisted_4","String","Checkbox","Icon","PluginConfig","ui","shallowRef","icon","processor","keyCounter","pluginKey","loadDefaultConfig","loadUI","widget","default","catch","e","updateEnabled","_createBlock","_component_Icon","_component_Checkbox","_cache","description","_resolveDynamicComponent","onChangeConfig","_component_PluginConfig","pluginsmap","pluginsjson","Plugin","draggable","beforeMount","changeEnabled","change","raw","comp","_component_draggable","list","item","_component_Plugin","onChangeEnabled","frameborder","width","style","alt","srcset","Help","script","_component_Help","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_23","_hoisted_25","HowToTile","_hoisted_1","_component_HowToTile","Mountains","AboutProject","HowToConvert","_component_Mountains","_component_AboutProject","_component_HowToConvert","option","_component_ImageUpload","onChangeImage","_component_ImagePreview","_component_PluginsManager","_hoisted_7"],"sourceRoot":""}